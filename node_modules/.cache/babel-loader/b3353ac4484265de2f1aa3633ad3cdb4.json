{"ast":null,"code":"var _jsxFileName = \"/Users/shashmithabandara/Downloads/OpenBook-main/src/Components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [bookData, setData] = useState([]);\n  const [loading, setLoading] = useState(true); // Fetch books initially when the component mounts\n\n  useEffect(() => {\n    fetchBooks(\"a\"); // Default query to load books\n  }, []); // Fetch books from Google Books API\n\n  const fetchBooks = async query => {\n    setLoading(true);\n\n    try {\n      const res = await axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=40`);\n      setData(res.data.items || []);\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  }; // Handle search function\n\n\n  const searchBook = evt => {\n    if (evt.key === \"Enter\" && search.trim()) {\n      fetchBooks(search); // Fetch books based on the search query\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row1\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"A room without books is like\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), \" a body without a soul.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Find Your Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Your Book Name\",\n            value: search,\n            onChange: e => setSearch(e.target.value),\n            onKeyPress: searchBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fetchBooks(search),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading books...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : bookData.length > 0 ? /*#__PURE__*/_jsxDEV(Card, {\n        book: bookData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No books found. Try searching for something else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"hkamIYJIm50FujAP9eLi53+NOl0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/shashmithabandara/Downloads/OpenBook-main/src/Components/Main.js"],"names":["React","useState","useEffect","Card","axios","Main","search","setSearch","bookData","setData","loading","setLoading","fetchBooks","query","res","get","data","items","err","console","error","searchBook","evt","key","trim","e","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\n\nconst Main = () => {\n  const [search, setSearch] = useState(\"\");\n  const [bookData, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch books initially when the component mounts\n  useEffect(() => {\n    fetchBooks(\"a\"); // Default query to load books\n  }, []);\n\n  // Fetch books from Google Books API\n  const fetchBooks = async (query) => {\n    setLoading(true);\n    try {\n      const res = await axios.get(\n        `https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=40`\n      );\n      setData(res.data.items || []);\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  // Handle search function\n  const searchBook = (evt) => {\n    if (evt.key === \"Enter\" && search.trim()) {\n      fetchBooks(search); // Fetch books based on the search query\n    }\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"row1\">\n          <h1>\n            A room without books is like\n            <br /> a body without a soul.\n          </h1>\n        </div>\n        <div className=\"row2\">\n          <h2>Find Your Book</h2>\n          <div className=\"search\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter Your Book Name\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              onKeyPress={searchBook}\n            />\n            <button onClick={() => fetchBooks(search)}>\n              <i className=\"fas fa-search\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        {loading ? (\n          <p>Loading books...</p>\n        ) : bookData.length > 0 ? (\n          <Card book={bookData} />\n        ) : (\n          <p>No books found. Try searching for something else.</p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}